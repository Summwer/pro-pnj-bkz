EnumBS Strategy Generation:v1. beta_start= 50, gap = 1, J = 100, J_gap = 1, cost_model = 3, max_loop = 5,  G_prec = 1.000000e-03,  slope_prec = 1.000000e-04,  progressive_sieve = True, worst_case = 0, succ_prob = 0.999, threads = 10, Find expected minimal time cost strategy, average_case, practical_pnjbkz_d4f = 3, practical_pump_d4f = 3, adjust beta_ as after 2023.1.31 [WWW, asiaccs2023], jump upper bound = min(asiaccs_d4f(beta,slope), pessitive d4f(beta)).

-------------------------
Primal attack, LWE challenge n=48, alpha=0.0150
Chose 187 samples. Predict solution at bkz-82 + svp-110

GSO precision:  dd
||b_1|| = 5331481, target_norm = 336484
Intial Slope = -0.06878, dim = 188, dvol = 410.0606339830559

Cost for generate strategy through EnumBS: 3.04 sec
Blocksize Strategy: [(88, 7, 1), (100, 8, 1)]

Starting a pnjBKZ-88-7 tour. 
 k:0, b:70, f:0 , RAM cost: 0.1205 GB 
Find the expected minimal  Strategy through EumBS!!
bs = (slope = -4.663748e-02, G_BKZ = -5.051309e+00 log2(sec), B_BKZ = 1.987534e+01 log2(bit), cum-pr = 2.580997e-05, pump-{50,138,21}, G_dsvp = 1.066555e+01 log2(sec), B_dsvp = 3.553123e+01 bit, G = 1.066558e+01 log2(sec), B = 3.553123e+01 log2(bit),  min_GB.first = 1.066558e+01 log2(sec))
S(beta,jump,tours):[(88,7,1),(100,8,1)]
Min Cost = 10.67 log2(sec) = 1624.27 s, Memory Cost = 35.53 log2(bit) = 5.78 GB 
 k:0, b:77, f:7 , RAM cost: 1.6745 GB  k:0, b:84, f:14 , RAM cost: 1.6946 GB  k:0, b:91, f:21 , RAM cost: 1.6999 GB  k:0, b:98, f:28 , RAM cost: 1.8329 GB  k:0, b:100, f:30 , RAM cost: 1.8364 GB  k:7, b:100, f:30 , RAM cost: 1.8411 GB  k:14, b:100, f:30 , RAM cost: 1.9673 GB  k:21, b:100, f:30 , RAM cost: 1.9800 GB  k:28, b:100, f:30 , RAM cost: 1.8608 GB  k:35, b:100, f:30 , RAM cost: 1.8626 GB  k:42, b:100, f:30 , RAM cost: 1.8637 GB  k:49, b:100, f:30 , RAM cost: 1.8657 GB  k:56, b:100, f:30 , RAM cost: 1.8681 GB  k:63, b:100, f:30 , RAM cost: 1.8704 GB  k:70, b:100, f:30 , RAM cost: 1.8708 GB  k:77, b:100, f:30 , RAM cost: 1.9974 GB  k:84, b:100, f:30 , RAM cost: 1.8751 GB  k:88, b:100, f:30 , RAM cost: 1.8774 GB  k:95, b:93, f:23 , RAM cost: 1.8788 GB  k:102, b:86, f:16 , RAM cost: 1.8791 GB  k:109, b:79, f:9 , RAM cost: 1.8799 GB  k:116, b:72, f:2 , RAM cost: 1.8800 GB  k:118, b:70, f:0  , RAM cost: 1.8808 GB   k:118, b:70, f:0 

slope: -0.05388,||b_1|| = 5331481, target_norm = 336484, BKZ cost: 203.651 s, walltime: 203.651 sec, memory cost = 2.00 GB 
Starting a pnjBKZ-100-8 tour. 
 k:0, b:81, f:0 , RAM cost: 1.7558 GB  k:0, b:89, f:8 , RAM cost: 1.9936 GB  k:0, b:97, f:16 , RAM cost: 1.9937 GB  k:0, b:105, f:24 , RAM cost: 1.9955 GB  k:0, b:112, f:31 , RAM cost: 1.9974 GB  k:8, b:112, f:31 , RAM cost: 2.1228 GB  k:16, b:112, f:31 , RAM cost: 2.0002 GB  k:24, b:112, f:31 , RAM cost: 2.0023 GB  k:32, b:112, f:31 , RAM cost: 2.0042 GB  k:40, b:112, f:31 , RAM cost: 2.0050 GB  k:48, b:112, f:31 , RAM cost: 2.0047 GB  k:56, b:112, f:31 , RAM cost: 2.0045 GB  k:64, b:112, f:31 , RAM cost: 2.0053 GB  k:72, b:112, f:31 , RAM cost: 2.0054 GB  k:76, b:112, f:31 , RAM cost: 2.0067 GB  k:84, b:104, f:23 , RAM cost: 2.0073 GB  k:92, b:96, f:15 , RAM cost: 2.0074 GB  k:100, b:88, f:7 , RAM cost: 2.0095 GB  k:107, b:81, f:0  , RAM cost: 2.0093 GB   k:107, b:81, f:0 

slope: -0.04479,||b_1|| = 5331481, target_norm = 336484, BKZ cost: 273.682 s, walltime: 477.333 sec, memory cost = 2.12 GB 
Without otf, would expect solution at pump_{52, 136, 12},n_max = 143

Starting svp pump_{52, 136, 12}
 124: ↑ 50   , RAM cost:1.8946 GB     124: ↑ 51   , RAM cost:1.8946 GB     124: ↑ 51   , RAM cost:1.8946 GB     124: ↑ 52   , RAM cost:1.8946 GB     124: ↑ 52   , RAM cost:1.8946 GB     124: ↑ 53   , RAM cost:1.8946 GB     124: ↑ 53   , RAM cost:1.8946 GB     124: ↑ 54   , RAM cost:1.8946 GB     124: ↑ 54   , RAM cost:1.8946 GB     124: ↑ 55   , RAM cost:1.8946 GB     124: ↑ 55   , RAM cost:1.8946 GB     124: ↑ 56   , RAM cost:1.8946 GB     124: ↑ 56   , RAM cost:1.8946 GB     124: ↑ 57   , RAM cost:1.8946 GB     124: ↑ 57   , RAM cost:1.8951 GB     124: ↑ 58   , RAM cost:1.8951 GB     124: ↑ 58   , RAM cost:1.8958 GB     124: ↑ 59   , RAM cost:1.8958 GB     124: ↑ 59   , RAM cost:1.8965 GB     124: ↑ 60   , RAM cost:1.8965 GB     124: ↑ 60   , RAM cost:1.8975 GB     124: ↑ 61   , RAM cost:1.8975 GB     124: ↑ 61   , RAM cost:1.8985 GB     124: ↑ 62   , RAM cost:1.8985 GB     124: ↑ 62   , RAM cost:1.8995 GB     124: ↑ 63   , RAM cost:1.8995 GB     124: ↑ 63   , RAM cost:1.9010 GB     124: ↑ 64   , RAM cost:1.9010 GB     124: ↑ 64   , RAM cost:1.9025 GB     124: ↑ 65   , RAM cost:2.0273 GB     124: ↑ 65   , RAM cost:2.0291 GB     124: ↑ 66   , RAM cost:2.0291 GB     124: ↑ 66   , RAM cost:2.0313 GB     124: ↑ 67   , RAM cost:2.0313 GB     124: ↑ 67   , RAM cost:2.0336 GB     124: ↑ 68   , RAM cost:2.0336 GB     124: ↑ 68   , RAM cost:2.0363 GB     124: ↑ 69   , RAM cost:2.0363 GB     124: ↑ 69   , RAM cost:2.0393 GB     124: ↑ 70   , RAM cost:2.0393 GB     124: ↑ 70   , RAM cost:2.0431 GB     124: ↑ 71   , RAM cost:2.0431 GB     124: ↑ 71   , RAM cost:2.0473 GB     124: ↑ 72   , RAM cost:2.0473 GB     124: ↑ 72   , RAM cost:2.0521 GB     124: ↑ 73   , RAM cost:2.0521 GB     124: ↑ 73   , RAM cost:2.0576 GB     124: ↑ 74   , RAM cost:2.0576 GB     124: ↑ 74   , RAM cost:2.0642 GB     124: ↑ 75   , RAM cost:2.0642 GB     124: ↑ 75   , RAM cost:2.0715 GB     124: ↑ 76   , RAM cost:2.0715 GB     124: ↑ 76   , RAM cost:2.0800 GB     124: ↑ 77   , RAM cost:2.0800 GB     124: ↑ 77   , RAM cost:2.0901 GB     124: ↑ 78   , RAM cost:2.0901 GB     124: ↑ 78   , RAM cost:2.1014 GB     124: ↑ 79   , RAM cost:2.1014 GB     124: ↑ 79   , RAM cost:2.1145 GB     124: ↑ 80   , RAM cost:2.1145 GB     124: ↑ 80   , RAM cost:2.1298 GB     124: ↑ 81   , RAM cost:2.1298 GB     124: ↑ 81   , RAM cost:2.1474 GB     124: ↑ 82   , RAM cost:2.1474 GB     124: ↑ 82   , RAM cost:2.1678 GB     124: ↑ 83   , RAM cost:2.1678 GB     124: ↑ 83   , RAM cost:2.1912 GB     124: ↑ 84   , RAM cost:2.1912 GB     124: ↑ 84   , RAM cost:2.2222 GB     124: ↑ 85   , RAM cost:2.2222 GB     124: ↑ 85   , RAM cost:2.2548 GB     124: ↑ 86   , RAM cost:2.2548 GB     124: ↑ 86   , RAM cost:2.2921 GB     124: ↑ 87   , RAM cost:2.2923 GB     124: ↑ 87   , RAM cost:2.3366 GB     124: ↑ 88   , RAM cost:2.3366 GB     124: ↑ 88   , RAM cost:2.3851 GB     124: ↑ 89   , RAM cost:2.3851 GB     124: ↑ 89   , RAM cost:2.4438 GB     124: ↑ 90   , RAM cost:2.4438 GB     124: ↑ 90   , RAM cost:2.5320 GB     124: ↑ 91   , RAM cost:2.5320 GB     124: ↑ 91   , RAM cost:2.6065 GB     124: ↑ 92   , RAM cost:2.6067 GB     124: ↑ 92   , RAM cost:2.6547 GB     124: ↑ 93   , RAM cost:2.6547 GB     124: ↑ 93   , RAM cost:2.7778 GB     124: ↑ 94   , RAM cost:2.7778 GB     124: ↑ 94   , RAM cost:2.8992 GB     124: ↑ 95   , RAM cost:2.8992 GB     124: ↑ 95   , RAM cost:3.0376 GB     124: ↑ 96   , RAM cost:3.0376 GB     124: ↑ 96   , RAM cost:3.1938 GB     124: ↑ 97   , RAM cost:3.3215 GB     124: ↑ 97   , RAM cost:3.5298 GB     124: ↑ 98   , RAM cost:3.5298 GB     124: ↑ 98   , RAM cost:3.7560 GB     124: ↑ 99   , RAM cost:3.7560 GB     124: ↑ 99   , RAM cost:4.0005 GB     124: ↑100   , RAM cost:4.0005 GB     124: ↑100   , RAM cost:4.2823 GB     124: ↑101   , RAM cost:4.2823 GB     124: ↑101   , RAM cost:4.6029 GB     124: ↑102   , RAM cost:4.6029 GB     124: ↑102   , RAM cost:5.0307 GB     124: ↑103   , RAM cost:5.0307 GB     124: ↑103   , RAM cost:5.4967 GB     124: ↑104   , RAM cost:5.4967 GB     124: ↑104   , RAM cost:5.9997 GB     124: ↑105   , RAM cost:5.9997 GB     124: ↑105   , RAM cost:6.5644 GB     124: ↑106   , RAM cost:6.5644 GB     124: ↑106   , RAM cost:7.3280 GB     124: ↑107   , RAM cost:7.3280 GB     124: ↑107   , RAM cost:8.1209 GB     124: ↑108   , RAM cost:8.1209 GB     124: ↑108   , RAM cost:9.0543 GB     124: ↑109   , RAM cost:9.0543 GB     124: ↑109   , RAM cost:10.0887 GB     124: ↑110   , RAM cost:10.0887 GB     124: ↑110   , RAM cost:11.2529 GB    Solution: (19, -63, 50, -11, -54, -54, 20, 9, 59, -21, -87, 64, -4, 14, 43, -3, -65, -10, -8, -49, 55, -42, -6, -91, 38, -23, 11, 5, 15, -13, -45, 33, -18, 1, 26, -67, -8, -1, 24, 8, 23, -7, -15, 44, -24, -38, 21, 15, 15, 6, 23, 23, -5, -30, 9, -21, 3, -26, -4, -28, 13, -44, -3, 69, -17, 23, 26, -24, -23, 48, 14, -11, 3, 4, -29, -12, 55, -79, 35, -62, -12, 94, 78, 15, 45, 5, 7, -43, 12, -24, 27, 8, 14, 20, -13, 6, 0, -14, -16, 18, 8, -61, -38, -24, -31, 35, -6, -52, 4, 8, 40, -9, -58, 28, -84, -19, 22, 28, 6, -19, 22, -21, -27, -3, 37, -59, 4, -15, 49, 35, 22, 7, 53, 44, 19, -36, -31, -24, -7, 1, 34, 59, 1, -11, 19, -1, 6, 4, -38, 15, 50, 1, 7, -77, 23, -17, -21, -46, 90, 8, -3, -20, -13, -4, 0, -17, -4, -20, 26, -3, 1, 13, -27, 69, -24, 71, 33, -65, 7, -38, 42, 40, 85, 70, 65, 23, -58, 1)
slope: -0.04495, T_pump = 266.655 sec, RAM_pump = 11.253 GB, walltime: 743.991 sec
Finished! TT=744.06 sec
(19, -63, 50, -11, -54, -54, 20, 9, 59, -21, -87, 64, -4, 14, 43, -3, -65, -10, -8, -49, 55, -42, -6, -91, 38, -23, 11, 5, 15, -13, -45, 33, -18, 1, 26, -67, -8, -1, 24, 8, 23, -7, -15, 44, -24, -38, 21, 15, 15, 6, 23, 23, -5, -30, 9, -21, 3, -26, -4, -28, 13, -44, -3, 69, -17, 23, 26, -24, -23, 48, 14, -11, 3, 4, -29, -12, 55, -79, 35, -62, -12, 94, 78, 15, 45, 5, 7, -43, 12, -24, 27, 8, 14, 20, -13, 6, 0, -14, -16, 18, 8, -61, -38, -24, -31, 35, -6, -52, 4, 8, 40, -9, -58, 28, -84, -19, 22, 28, 6, -19, 22, -21, -27, -3, 37, -59, 4, -15, 49, 35, 22, 7, 53, 44, 19, -36, -31, -24, -7, 1, 34, 59, 1, -11, 19, -1, 6, 4, -38, 15, 50, 1, 7, -77, 23, -17, -21, -46, 90, 8, -3, -20, -13, -4, 0, -17, -4, -20, 26, -3, 1, 13, -27, 69, -24, 71, 33, -65, 7, -38, 42, 40, 85, 70, 65, 23, -58, 1)
