EnumBS Strategy Generation:v1. beta_start= 50, gap = 1, J = 100, J_gap = 1, cost_model = 3, max_loop = 5,  G_prec = 1.000000e-03,  slope_prec = 1.000000e-04,  progressive_sieve = True, worst_case = 0, succ_prob = 0.999, threads = 10, Find expected minimal time cost strategy, average_case, practical_pnjbkz_d4f = 3, practical_pump_d4f = 3, adjust beta_ as after 2023.1.31 [WWW, asiaccs2023], jump upper bound = min(asiaccs_d4f(beta,slope), pessitive d4f(beta)).
Find the expected minimal  Strategy through EumBS!!
bs = (slope = -4.475403e-02, G_BKZ = -4.793127e+00 log2(sec), B_BKZ = 1.968635e+01 log2(bit), cum-pr = 2.264096e-05, pump-{56,140,22}, G_dsvp = 1.109687e+01 log2(sec), B_dsvp = 3.577016e+01 bit, G = 1.109689e+01 log2(sec), B = 3.577016e+01 log2(bit),  min_GB.first = 1.109689e+01 log2(sec))
S(beta,jump,tours):[(100,8,2)]
Min Cost = 11.10 log2(sec) = 2190.26 s, Memory Cost = 35.77 log2(bit) = 6.82 GB 


-------------------------
Primal attack, LWE challenge n=49, alpha=0.0150
Chose 195 samples. Predict solution at bkz-84 + svp-114

GSO precision:  dd
||b_1|| = 5812921, target_norm = 382563
Intial Slope = -0.06562, dim = 196, dvol = 433.7523513554072

Cost for generate strategy through EnumBS: 4.91 sec
Blocksize Strategy: [(100, 8, 2)]

Starting a pnjBKZ-100-8 tour. 

 k:0, b:81, f:0 , RAM cost: 0.1220 GB 
 k:0, b:89, f:8 , RAM cost: 1.8380 GB 
 k:0, b:97, f:16 , RAM cost: 1.8455 GB 
 k:0, b:105, f:24 , RAM cost: 1.9721 GB 
 k:0, b:112, f:31 , RAM cost: 2.0979 GB 
 k:8, b:112, f:31 , RAM cost: 2.0998 GB 
 k:16, b:112, f:31 , RAM cost: 2.1031 GB 
 k:24, b:112, f:31 , RAM cost: 2.1072 GB 
 k:32, b:112, f:31 , RAM cost: 2.1103 GB 
 k:40, b:112, f:31 , RAM cost: 2.1128 GB 
 k:48, b:112, f:31 , RAM cost: 2.1156 GB 
 k:56, b:112, f:31 , RAM cost: 2.1187 GB 
 k:64, b:112, f:31 , RAM cost: 2.1192 GB 
 k:72, b:112, f:31 , RAM cost: 2.1211 GB 
 k:80, b:112, f:31 , RAM cost: 2.1234 GB 
 k:84, b:112, f:31 , RAM cost: 2.1263 GB 
 k:92, b:104, f:23 , RAM cost: 2.0014 GB 
 k:100, b:96, f:15 , RAM cost: 2.0032 GB 
 k:108, b:88, f:7 , RAM cost: 2.0052 GB 
 k:115, b:81, f:0  , RAM cost: 2.0061 GB  
 k:115, b:81, f:0 

slope: -0.05115,||b_1|| = 5812921, target_norm = 382563, BKZ cost: 284.919 s, walltime: 284.920 sec, memory cost = 2.13 GB 
Starting a pnjBKZ-100-8 tour. 

 k:0, b:81, f:0 , RAM cost: 1.8810 GB 
 k:0, b:89, f:8 , RAM cost: 2.0072 GB 
 k:0, b:97, f:16 , RAM cost: 2.0093 GB 
 k:0, b:105, f:24 , RAM cost: 2.0094 GB 
 k:0, b:112, f:31 , RAM cost: 2.1345 GB 
 k:8, b:112, f:31 , RAM cost: 2.1361 GB 
 k:16, b:112, f:31 , RAM cost: 2.0110 GB 
 k:24, b:112, f:31 , RAM cost: 2.0114 GB 
 k:32, b:112, f:31 , RAM cost: 2.0115 GB 
 k:40, b:112, f:31 , RAM cost: 2.0117 GB 
 k:48, b:112, f:31 , RAM cost: 2.0114 GB 
 k:56, b:112, f:31 , RAM cost: 2.1385 GB 
 k:64, b:112, f:31 , RAM cost: 2.0140 GB 
 k:72, b:112, f:31 , RAM cost: 2.0159 GB 
 k:80, b:112, f:31 , RAM cost: 2.0179 GB 
 k:84, b:112, f:31 , RAM cost: 2.0177 GB 
 k:92, b:104, f:23 , RAM cost: 2.1430 GB 
 k:100, b:96, f:15 , RAM cost: 2.0197 GB 
 k:108, b:88, f:7 , RAM cost: 2.0218 GB 
 k:115, b:81, f:0  , RAM cost: 2.0215 GB  
 k:115, b:81, f:0 

slope: -0.04423,||b_1|| = 5812921, target_norm = 382563, BKZ cost: 285.106 s, walltime: 570.026 sec, memory cost = 2.14 GB 
Without otf, would expect solution at pump_{56, 140, 13},n_max = 143

Starting svp pump_{56, 140, 13}

 127: ↑ 50   , RAM cost:1.9050 GB    
 127: ↑ 51   , RAM cost:1.9050 GB    
 127: ↑ 51   , RAM cost:1.9050 GB    
 127: ↑ 52   , RAM cost:1.9050 GB    
 127: ↑ 52   , RAM cost:1.9050 GB    
 127: ↑ 53   , RAM cost:1.9050 GB    
 127: ↑ 53   , RAM cost:1.9050 GB    
 127: ↑ 54   , RAM cost:1.9050 GB    
 127: ↑ 54   , RAM cost:1.9050 GB    
 127: ↑ 55   , RAM cost:1.9050 GB    
 127: ↑ 55   , RAM cost:1.9050 GB    
 127: ↑ 56   , RAM cost:1.9050 GB    
 127: ↑ 56   , RAM cost:1.9050 GB    
 127: ↑ 57   , RAM cost:1.9050 GB    
 127: ↑ 57   , RAM cost:1.9055 GB    
 127: ↑ 58   , RAM cost:1.9055 GB    
 127: ↑ 58   , RAM cost:1.9062 GB    
 127: ↑ 59   , RAM cost:1.9062 GB    
 127: ↑ 59   , RAM cost:1.9070 GB    
 127: ↑ 60   , RAM cost:1.9070 GB    
 127: ↑ 60   , RAM cost:1.9078 GB    
 127: ↑ 61   , RAM cost:1.9078 GB    
 127: ↑ 61   , RAM cost:1.9088 GB    
 127: ↑ 62   , RAM cost:1.9088 GB    
 127: ↑ 62   , RAM cost:1.9100 GB    
 127: ↑ 63   , RAM cost:1.9100 GB    
 127: ↑ 63   , RAM cost:1.9113 GB    
 127: ↑ 64   , RAM cost:1.9113 GB    
 127: ↑ 64   , RAM cost:1.9128 GB    
 127: ↑ 65   , RAM cost:2.0380 GB    
 127: ↑ 65   , RAM cost:2.0398 GB    
 127: ↑ 66   , RAM cost:2.0398 GB    
 127: ↑ 66   , RAM cost:2.0418 GB    
 127: ↑ 67   , RAM cost:2.0418 GB    
 127: ↑ 67   , RAM cost:2.0441 GB    
 127: ↑ 68   , RAM cost:2.0441 GB    
 127: ↑ 68   , RAM cost:2.0468 GB    
 127: ↑ 69   , RAM cost:2.0468 GB    
 127: ↑ 69   , RAM cost:2.0499 GB    
 127: ↑ 70   , RAM cost:2.0499 GB    
 127: ↑ 70   , RAM cost:2.0536 GB    
 127: ↑ 71   , RAM cost:2.0536 GB    
 127: ↑ 71   , RAM cost:2.0577 GB    
 127: ↑ 72   , RAM cost:2.0577 GB    
 127: ↑ 72   , RAM cost:2.0625 GB    
 127: ↑ 73   , RAM cost:2.0625 GB    
 127: ↑ 73   , RAM cost:2.0683 GB    
 127: ↑ 74   , RAM cost:2.0683 GB    
 127: ↑ 74   , RAM cost:2.0746 GB    
 127: ↑ 75   , RAM cost:2.0746 GB    
 127: ↑ 75   , RAM cost:2.0821 GB    
 127: ↑ 76   , RAM cost:2.0821 GB    
 127: ↑ 76   , RAM cost:2.0907 GB    
 127: ↑ 77   , RAM cost:2.0907 GB    
 127: ↑ 77   , RAM cost:2.1005 GB    
 127: ↑ 78   , RAM cost:2.1005 GB    
 127: ↑ 78   , RAM cost:2.1118 GB    
 127: ↑ 79   , RAM cost:2.1118 GB    
 127: ↑ 79   , RAM cost:2.1252 GB    
 127: ↑ 80   , RAM cost:2.1252 GB    
 127: ↑ 80   , RAM cost:2.1403 GB    
 127: ↑ 81   , RAM cost:2.1403 GB    
 127: ↑ 81   , RAM cost:2.1579 GB    
 127: ↑ 82   , RAM cost:2.1579 GB    
 127: ↑ 82   , RAM cost:2.1783 GB    
 127: ↑ 83   , RAM cost:2.1783 GB    
 127: ↑ 83   , RAM cost:2.2017 GB    
 127: ↑ 84   , RAM cost:2.2017 GB    
 127: ↑ 84   , RAM cost:2.2471 GB    
 127: ↑ 85   , RAM cost:2.2471 GB    
 127: ↑ 85   , RAM cost:2.2786 GB    
 127: ↑ 86   , RAM cost:2.2786 GB    
 127: ↑ 86   , RAM cost:2.3167 GB    
 127: ↑ 87   , RAM cost:2.3167 GB    
 127: ↑ 87   , RAM cost:2.3614 GB    
 127: ↑ 88   , RAM cost:2.3614 GB    
 127: ↑ 88   , RAM cost:2.4105 GB    
 127: ↑ 89   , RAM cost:2.4105 GB    
 127: ↑ 89   , RAM cost:2.4693 GB    
 127: ↑ 90   , RAM cost:2.4693 GB    
 127: ↑ 90   , RAM cost:2.5429 GB    
 127: ↑ 91   , RAM cost:2.5429 GB    
 127: ↑ 91   , RAM cost:2.6174 GB    
 127: ↑ 92   , RAM cost:2.6174 GB    
 127: ↑ 92   , RAM cost:2.7065 GB    
 127: ↑ 93   , RAM cost:2.7065 GB    
 127: ↑ 93   , RAM cost:2.8095 GB    
 127: ↑ 94   , RAM cost:2.8095 GB    
 127: ↑ 94   , RAM cost:2.9264 GB    
 127: ↑ 95   , RAM cost:2.9264 GB    
 127: ↑ 95   , RAM cost:3.0592 GB    
 127: ↑ 96   , RAM cost:3.0592 GB    
 127: ↑ 96   , RAM cost:3.2175 GB    
 127: ↑ 97   , RAM cost:3.3465 GB    
 127: ↑ 97   , RAM cost:3.5454 GB    
 127: ↑ 98   , RAM cost:3.5454 GB    
 127: ↑ 98   , RAM cost:3.7681 GB    
 127: ↑ 99   , RAM cost:3.7681 GB    
 127: ↑ 99   , RAM cost:4.0136 GB    
 127: ↑100   , RAM cost:4.0136 GB    
 127: ↑100   , RAM cost:4.2962 GB    
 127: ↑101   , RAM cost:4.2962 GB    
 127: ↑101   , RAM cost:4.6345 GB    
 127: ↑102   , RAM cost:4.6345 GB    
 127: ↑102   , RAM cost:5.0511 GB    Solution: (-44, -71, 14, 24, -46, -15, -3, -11, -32, -5, 39, -27, 36, -54, 9, -20, -50, 40, -37, 31, -83, -50, 17, 11, -4, 1, 16, -38, 52, 50, -26, -27, -9, -48, 29, -3, 11, 3, 14, -20, 3, 11, 65, 78, -54, 14, -51, 7, -34, 6, 7, -7, 46, -52, -13, -13, 71, 11, -2, -34, -25, -45, 53, 48, -50, -3, -44, 35, -6, -21, 55, 25, 1, -7, 10, -29, 42, 64, -54, -48, -5, -16, 32, -33, 0, -33, -32, 19, 39, -6, -30, 41, -19, -24, 34, 38, 3, -3, -6, 38, -33, 9, 15, -17, 18, -35, -36, -38, -8, -38, 22, -25, 23, -22, 72, -11, 19, -23, -24, 3, -40, -10, -36, -14, 29, 10, 63, 58, 11, 28, -39, 31, 16, -20, 4, 41, 3, 4, -10, -3, 20, -19, 42, 4, 7, -63, -30, -28, -13, 14, 43, 4, -31, -49, -51, -6, -89, 37, 14, 69, -4, -28, -111, 20, -15, -18, -36, -61, 3, -31, -41, 42, 5, 68, -21, -17, 16, -22, 55, -18, 49, 53, 15, 5, -56, -23, 9, 40, -86, -53, 20, -18, 3, 1, -50, 1)
slope: -0.04437, T_pump = 70.825 sec, RAM_pump = 5.053 GB, walltime: 640.854 sec
Finished! TT=640.95 sec
(-44, -71, 14, 24, -46, -15, -3, -11, -32, -5, 39, -27, 36, -54, 9, -20, -50, 40, -37, 31, -83, -50, 17, 11, -4, 1, 16, -38, 52, 50, -26, -27, -9, -48, 29, -3, 11, 3, 14, -20, 3, 11, 65, 78, -54, 14, -51, 7, -34, 6, 7, -7, 46, -52, -13, -13, 71, 11, -2, -34, -25, -45, 53, 48, -50, -3, -44, 35, -6, -21, 55, 25, 1, -7, 10, -29, 42, 64, -54, -48, -5, -16, 32, -33, 0, -33, -32, 19, 39, -6, -30, 41, -19, -24, 34, 38, 3, -3, -6, 38, -33, 9, 15, -17, 18, -35, -36, -38, -8, -38, 22, -25, 23, -22, 72, -11, 19, -23, -24, 3, -40, -10, -36, -14, 29, 10, 63, 58, 11, 28, -39, 31, 16, -20, 4, 41, 3, 4, -10, -3, 20, -19, 42, 4, 7, -63, -30, -28, -13, 14, 43, 4, -31, -49, -51, -6, -89, 37, 14, 69, -4, -28, -111, 20, -15, -18, -36, -61, 3, -31, -41, 42, 5, 68, -21, -17, 16, -22, 55, -18, 49, 53, 15, 5, -56, -23, 9, 40, -86, -53, 20, -18, 3, 1, -50, 1)
