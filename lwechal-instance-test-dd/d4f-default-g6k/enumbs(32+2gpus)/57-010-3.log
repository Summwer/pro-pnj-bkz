EnumBS Strategy Generation:v1. beta_start= 50, gap = 1, J = 100, J_gap = 1, cost_model = 3, max_loop = 5,  G_prec = 1.000000e-03,  slope_prec = 1.000000e-04,  progressive_sieve = True, worst_case = 0, succ_prob = 0.999, threads = 10, Find expected minimal time cost strategy, average_case, practical_pnjbkz_d4f = 3, practical_pump_d4f = 3, adjust beta_ as after 2023.1.31 [WWW, asiaccs2023], jump upper bound = min(asiaccs_d4f(beta,slope), pessitive d4f(beta)).

-------------------------
Primal attack, LWE challenge n=57, alpha=0.0100
Chose 206 samples. Predict solution at bkz-81 + svp-114

GSO precision:  dd
||b_1|| = 10569001, target_norm = 326583
Intial Slope = -0.06881, dim = 207, dvol = 484.2405891219084

Cost for generate strategy through EnumBS: 7.28 sec
Blocksize Strategy: [(100, 8, 1), (104, 8, 1)]

Starting a pnjBKZ-100-8 tour. 
 k:0, b:81, f:0 , RAM cost: 0.1290 GB 
Find the expected minimal  Strategy through EumBS!!
bs = (slope = -4.606821e-02, G_BKZ = -4.330903e+00 log2(sec), B_BKZ = 2.019927e+01 log2(bit), cum-pr = 2.320820e-05, pump-{65,142,22}, G_dsvp = 1.154413e+01 log2(sec), B_dsvp = 3.609296e+01 bit, G = 1.154416e+01 log2(sec), B = 3.609296e+01 log2(bit),  min_GB.first = 1.154416e+01 log2(sec))
S(beta,jump,tours):[(100,8,1),(104,8,1)]
Min Cost = 11.54 log2(sec) = 2986.33 s, Memory Cost = 36.09 log2(bit) = 8.53 GB 
 k:0, b:89, f:8 , RAM cost: 1.8213 GB  k:0, b:97, f:16 , RAM cost: 1.9522 GB  k:0, b:105, f:24 , RAM cost: 1.9540 GB  k:0, b:112, f:31 , RAM cost: 1.9587 GB  k:8, b:112, f:31 , RAM cost: 2.0862 GB  k:16, b:112, f:31 , RAM cost: 2.0908 GB  k:24, b:112, f:31 , RAM cost: 2.0964 GB  k:32, b:112, f:31 , RAM cost: 2.0999 GB  k:40, b:112, f:31 , RAM cost: 2.1028 GB  k:48, b:112, f:31 , RAM cost: 2.1061 GB  k:56, b:112, f:31 , RAM cost: 2.1084 GB  k:64, b:112, f:31 , RAM cost: 2.1109 GB  k:72, b:112, f:31 , RAM cost: 2.1112 GB  k:80, b:112, f:31 , RAM cost: 1.9869 GB  k:88, b:112, f:31 , RAM cost: 2.1137 GB  k:95, b:112, f:31 , RAM cost: 2.1144 GB  k:103, b:104, f:23 , RAM cost: 1.9914 GB  k:111, b:96, f:15 , RAM cost: 1.9916 GB  k:119, b:88, f:7 , RAM cost: 1.9915 GB  k:126, b:81, f:0  , RAM cost: 1.9916 GB   k:126, b:81, f:0 

slope: -0.05453,||b_1|| = 10569001, target_norm = 326583, BKZ cost: 314.718 s, walltime: 314.718 sec, memory cost = 2.11 GB 
Starting a pnjBKZ-104-8 tour. 
 k:0, b:85, f:0 , RAM cost: 1.8674 GB  k:0, b:93, f:8 , RAM cost: 2.1150 GB  k:0, b:101, f:16 , RAM cost: 2.1153 GB  k:0, b:109, f:24 , RAM cost: 2.2453 GB  k:0, b:116, f:31 , RAM cost: 2.1246 GB  k:8, b:116, f:31 , RAM cost: 2.2498 GB  k:16, b:116, f:31 , RAM cost: 2.2515 GB  k:24, b:116, f:31 , RAM cost: 2.2553 GB  k:32, b:116, f:31 , RAM cost: 2.1335 GB  k:40, b:116, f:31 , RAM cost: 2.1357 GB  k:48, b:116, f:31 , RAM cost: 2.2616 GB  k:56, b:116, f:31 , RAM cost: 2.2639 GB  k:64, b:116, f:31 , RAM cost: 2.2651 GB  k:72, b:116, f:31 , RAM cost: 2.1411 GB  k:80, b:116, f:31 , RAM cost: 2.2680 GB  k:88, b:116, f:31 , RAM cost: 2.2699 GB  k:91, b:116, f:31 , RAM cost: 2.2711 GB  k:99, b:108, f:23 , RAM cost: 2.1459 GB  k:107, b:100, f:15 , RAM cost: 2.1476 GB  k:115, b:92, f:7 , RAM cost: 2.1481 GB  k:122, b:85, f:0  , RAM cost: 2.1493 GB   k:122, b:85, f:0 

slope: -0.04493,||b_1|| = 10569001, target_norm = 326583, BKZ cost: 423.303 s, walltime: 738.021 sec, memory cost = 2.27 GB 
Without otf, would expect solution at pump_{66, 141, 12},n_max = 143

Starting svp pump_{66, 141, 12}
 129: ↑ 50   , RAM cost:1.9402 GB     129: ↑ 51   , RAM cost:1.9402 GB     129: ↑ 51   , RAM cost:1.9402 GB     129: ↑ 52   , RAM cost:1.9402 GB     129: ↑ 52   , RAM cost:1.9402 GB     129: ↑ 53   , RAM cost:1.9402 GB     129: ↑ 53   , RAM cost:1.9402 GB     129: ↑ 54   , RAM cost:1.9402 GB     129: ↑ 54   , RAM cost:1.9402 GB     129: ↑ 55   , RAM cost:1.9402 GB     129: ↑ 55   , RAM cost:1.9402 GB     129: ↑ 56   , RAM cost:1.9402 GB     129: ↑ 56   , RAM cost:1.9402 GB     129: ↑ 57   , RAM cost:1.9402 GB     129: ↑ 57   , RAM cost:1.9405 GB     129: ↑ 58   , RAM cost:1.9405 GB     129: ↑ 58   , RAM cost:1.9413 GB     129: ↑ 59   , RAM cost:1.9413 GB     129: ↑ 59   , RAM cost:1.9421 GB     129: ↑ 60   , RAM cost:1.9421 GB     129: ↑ 60   , RAM cost:1.9428 GB     129: ↑ 61   , RAM cost:1.9428 GB     129: ↑ 61   , RAM cost:1.9438 GB     129: ↑ 62   , RAM cost:1.9438 GB     129: ↑ 62   , RAM cost:1.9451 GB     129: ↑ 63   , RAM cost:1.9451 GB     129: ↑ 63   , RAM cost:1.9463 GB     129: ↑ 64   , RAM cost:1.9463 GB     129: ↑ 64   , RAM cost:1.9478 GB     129: ↑ 65   , RAM cost:2.0728 GB     129: ↑ 65   , RAM cost:2.0747 GB     129: ↑ 66   , RAM cost:2.0747 GB     129: ↑ 66   , RAM cost:2.0767 GB     129: ↑ 67   , RAM cost:2.0767 GB     129: ↑ 67   , RAM cost:2.0790 GB     129: ↑ 68   , RAM cost:2.0790 GB     129: ↑ 68   , RAM cost:2.0817 GB     129: ↑ 69   , RAM cost:2.0817 GB     129: ↑ 69   , RAM cost:2.0848 GB     129: ↑ 70   , RAM cost:2.0848 GB     129: ↑ 70   , RAM cost:2.0886 GB     129: ↑ 71   , RAM cost:2.0886 GB     129: ↑ 71   , RAM cost:2.0926 GB     129: ↑ 72   , RAM cost:2.0926 GB     129: ↑ 72   , RAM cost:2.0976 GB     129: ↑ 73   , RAM cost:2.0976 GB     129: ↑ 73   , RAM cost:2.1032 GB     129: ↑ 74   , RAM cost:2.1032 GB     129: ↑ 74   , RAM cost:2.1095 GB     129: ↑ 75   , RAM cost:2.1095 GB     129: ↑ 75   , RAM cost:2.1170 GB     129: ↑ 76   , RAM cost:2.1170 GB     129: ↑ 76   , RAM cost:2.1256 GB     129: ↑ 77   , RAM cost:2.1256 GB     129: ↑ 77   , RAM cost:2.1354 GB     129: ↑ 78   , RAM cost:2.1354 GB     129: ↑ 78   , RAM cost:2.1470 GB     129: ↑ 79   , RAM cost:2.1470 GB     129: ↑ 79   , RAM cost:2.1601 GB     129: ↑ 80   , RAM cost:2.1601 GB     129: ↑ 80   , RAM cost:2.1754 GB     129: ↑ 81   , RAM cost:2.1754 GB     129: ↑ 81   , RAM cost:2.1930 GB     129: ↑ 82   , RAM cost:2.1930 GB     129: ↑ 82   , RAM cost:2.2132 GB     129: ↑ 83   , RAM cost:2.2132 GB     129: ↑ 83   , RAM cost:2.2366 GB     129: ↑ 84   , RAM cost:2.2366 GB     129: ↑ 84   , RAM cost:2.2639 GB     129: ↑ 85   , RAM cost:2.2639 GB     129: ↑ 85   , RAM cost:2.2950 GB     129: ↑ 86   , RAM cost:2.2950 GB     129: ↑ 86   , RAM cost:2.3313 GB     129: ↑ 87   , RAM cost:2.3313 GB     129: ↑ 87   , RAM cost:2.3731 GB     129: ↑ 88   , RAM cost:2.3731 GB     129: ↑ 88   , RAM cost:2.4211 GB     129: ↑ 89   , RAM cost:2.4211 GB     129: ↑ 89   , RAM cost:2.4772 GB     129: ↑ 90   , RAM cost:2.4772 GB     129: ↑ 90   , RAM cost:2.5417 GB     129: ↑ 91   , RAM cost:2.5417 GB     129: ↑ 91   , RAM cost:2.6162 GB     129: ↑ 92   , RAM cost:2.6162 GB     129: ↑ 92   , RAM cost:2.7031 GB     129: ↑ 93   , RAM cost:2.7031 GB     129: ↑ 93   , RAM cost:2.8039 GB     129: ↑ 94   , RAM cost:2.8039 GB     129: ↑ 94   , RAM cost:2.9188 GB     129: ↑ 95   , RAM cost:2.9188 GB     129: ↑ 95   , RAM cost:3.0531 GB     129: ↑ 96   , RAM cost:3.0531 GB     129: ↑ 96   , RAM cost:3.2081 GB     129: ↑ 97   , RAM cost:3.3343 GB     129: ↑ 97   , RAM cost:3.5285 GB     129: ↑ 98   , RAM cost:3.5285 GB     129: ↑ 98   , RAM cost:3.7506 GB     129: ↑ 99   , RAM cost:3.7506 GB     129: ↑ 99   , RAM cost:3.9985 GB     129: ↑100   , RAM cost:3.9985 GB     129: ↑100   , RAM cost:4.2804 GB     129: ↑101   , RAM cost:4.2804 GB     129: ↑101   , RAM cost:4.6048 GB     129: ↑102   , RAM cost:4.6048 GB     129: ↑102   , RAM cost:5.0446 GB     129: ↑103   , RAM cost:5.0446 GB     129: ↑103   , RAM cost:5.4845 GB     129: ↑104   , RAM cost:5.4845 GB     129: ↑104   , RAM cost:5.9852 GB     129: ↑105   , RAM cost:5.9852 GB     129: ↑105   , RAM cost:6.5561 GB     129: ↑106   , RAM cost:6.5561 GB     129: ↑106   , RAM cost:7.2635 GB     129: ↑107   , RAM cost:7.2635 GB     129: ↑107   , RAM cost:8.1236 GB     129: ↑108   , RAM cost:8.1236 GB     129: ↑108   , RAM cost:9.0193 GB     129: ↑109   , RAM cost:9.0193 GB     129: ↑109   , RAM cost:10.0506 GB    Solution: (-20, -39, 14, 60, 8, 0, -38, 34, 22, -36, 8, 0, -10, 37, 12, 7, -7, 15, 9, 8, 42, 27, 69, -25, -73, 25, -15, 9, 22, -11, -50, -52, -19, 15, 51, 58, -40, 14, 8, 23, 31, -48, 2, 0, -26, 23, 26, 21, -2, 37, 45, -45, -27, 22, 60, 51, 34, -15, 15, -48, 19, 42, -42, 51, -32, -22, 11, 34, 2, 25, 47, -43, 52, -8, -28, 6, 27, -48, -54, -3, -40, -19, 22, -20, 1, -3, -5, 29, 26, 6, 6, 28, -26, 15, 69, 5, 77, -15, -74, 11, 1, -10, 87, 104, -23, 0, -8, -18, -46, -13, 11, -1, -43, 26, -78, 2, -8, 121, 48, 4, 20, -38, -23, 29, 35, -13, -12, 13, -35, 46, 2, -27, 13, -48, -27, 8, 12, 23, 36, -24, -29, -45, 28, -17, -13, 22, -26, 3, -17, 25, -6, 38, -1, -25, 25, 3, 13, -3, -27, 7, -6, -54, -35, -34, -58, -19, -5, 65, 23, 19, 55, 23, 40, -16, 9, -20, -14, -56, -19, -4, 33, 35, -9, -19, 5, -8, 6, 40, -37, -23, 30, -12, 8, -39, -8, -22, 14, -15, 29, -42, -15, 35, -52, -22, 42, 31, 1)
slope: -0.04500, T_pump = 215.672 sec, RAM_pump = 10.051 GB, walltime: 953.697 sec
Finished! TT=953.82 sec
(-20, -39, 14, 60, 8, 0, -38, 34, 22, -36, 8, 0, -10, 37, 12, 7, -7, 15, 9, 8, 42, 27, 69, -25, -73, 25, -15, 9, 22, -11, -50, -52, -19, 15, 51, 58, -40, 14, 8, 23, 31, -48, 2, 0, -26, 23, 26, 21, -2, 37, 45, -45, -27, 22, 60, 51, 34, -15, 15, -48, 19, 42, -42, 51, -32, -22, 11, 34, 2, 25, 47, -43, 52, -8, -28, 6, 27, -48, -54, -3, -40, -19, 22, -20, 1, -3, -5, 29, 26, 6, 6, 28, -26, 15, 69, 5, 77, -15, -74, 11, 1, -10, 87, 104, -23, 0, -8, -18, -46, -13, 11, -1, -43, 26, -78, 2, -8, 121, 48, 4, 20, -38, -23, 29, 35, -13, -12, 13, -35, 46, 2, -27, 13, -48, -27, 8, 12, 23, 36, -24, -29, -45, 28, -17, -13, 22, -26, 3, -17, 25, -6, 38, -1, -25, 25, 3, 13, -3, -27, 7, -6, -54, -35, -34, -58, -19, -5, 65, 23, 19, 55, 23, 40, -16, 9, -20, -14, -56, -19, -4, 33, 35, -9, -19, 5, -8, 6, 40, -37, -23, 30, -12, 8, -39, -8, -22, 14, -15, 29, -42, -15, 35, -52, -22, 42, 31, 1)
