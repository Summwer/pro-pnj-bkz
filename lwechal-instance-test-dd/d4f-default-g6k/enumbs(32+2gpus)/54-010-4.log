EnumBS Strategy Generation:v1. beta_start= 50, gap = 1, J = 100, J_gap = 1, cost_model = 3, max_loop = 5,  G_prec = 1.000000e-03,  slope_prec = 1.000000e-04,  progressive_sieve = True, worst_case = 0, succ_prob = 0.999, threads = 10, Find expected minimal time cost strategy, average_case, practical_pnjbkz_d4f = 3, practical_pump_d4f = 3, adjust beta_ as after 2023.1.31 [WWW, asiaccs2023], jump upper bound = min(asiaccs_d4f(beta,slope), pessitive d4f(beta)).

-------------------------
Primal attack, LWE challenge n=54, alpha=0.0100
Chose 197 samples. Predict solution at bkz-75 + svp-103

GSO precision:  dd
||b_1|| = 8508889, target_norm = 251438
Intial Slope = -0.07110, dim = 198, dvol = 473.0165934829174

Cost for generate strategy through EnumBS: 3.07 sec
Blocksize Strategy: [(88, 7, 2)]

Starting a pnjBKZ-88-7 tour. 
 k:0, b:70, f:0 , RAM cost: 0.1239 GB 
Find the expected minimal  Strategy through EumBS!!
bs = (slope = -5.082193e-02, G_BKZ = -1.387318e+01 log2(sec), B_BKZ = 1.018567e+01 log2(bit), cum-pr = 5.396439e-08, pump-{62,136,21}, G_dsvp = 1.069053e+01 log2(sec), B_dsvp = 3.546090e+01 bit, G = 1.069053e+01 log2(sec), B = 3.546090e+01 log2(bit),  min_GB.first = 1.069053e+01 log2(sec))
S(beta,jump,tours):[(88,7,2)]
Min Cost = 10.69 log2(sec) = 1652.61 s, Memory Cost = 35.46 log2(bit) = 5.51 GB 
 k:0, b:77, f:7 , RAM cost: 1.6658 GB  k:0, b:84, f:14 , RAM cost: 1.6743 GB  k:0, b:91, f:21 , RAM cost: 1.6874 GB  k:0, b:98, f:28 , RAM cost: 1.8208 GB  k:0, b:100, f:30 , RAM cost: 1.8220 GB  k:7, b:100, f:30 , RAM cost: 1.8257 GB  k:14, b:100, f:30 , RAM cost: 1.9510 GB  k:21, b:100, f:30 , RAM cost: 1.8388 GB  k:28, b:100, f:30 , RAM cost: 1.9697 GB  k:35, b:100, f:30 , RAM cost: 1.9753 GB  k:42, b:100, f:30 , RAM cost: 1.8525 GB  k:49, b:100, f:30 , RAM cost: 1.8538 GB  k:56, b:100, f:30 , RAM cost: 1.8556 GB  k:63, b:100, f:30 , RAM cost: 1.8580 GB  k:70, b:100, f:30 , RAM cost: 1.8578 GB  k:77, b:100, f:30 , RAM cost: 1.8582 GB  k:84, b:100, f:30 , RAM cost: 1.8607 GB  k:91, b:100, f:30 , RAM cost: 1.8626 GB  k:98, b:100, f:30 , RAM cost: 1.8650 GB  k:105, b:93, f:23 , RAM cost: 1.8672 GB  k:112, b:86, f:16 , RAM cost: 1.8674 GB  k:119, b:79, f:9 , RAM cost: 1.8690 GB  k:126, b:72, f:2 , RAM cost: 1.8691 GB  k:128, b:70, f:0  , RAM cost: 1.8690 GB   k:128, b:70, f:0 

slope: -0.05522,||b_1|| = 8508889, target_norm = 251438, BKZ cost: 208.828 s, walltime: 208.828 sec, memory cost = 1.98 GB 
Starting a pnjBKZ-88-7 tour. 
 k:0, b:70, f:0 , RAM cost: 1.7445 GB  k:0, b:77, f:7 , RAM cost: 1.8694 GB  k:0, b:84, f:14 , RAM cost: 1.8694 GB  k:0, b:91, f:21 , RAM cost: 1.8702 GB  k:0, b:98, f:28 , RAM cost: 1.8711 GB  k:0, b:100, f:30 , RAM cost: 1.8713 GB  k:7, b:100, f:30 , RAM cost: 1.8721 GB  k:14, b:100, f:30 , RAM cost: 1.8720 GB  k:21, b:100, f:30 , RAM cost: 1.8730 GB  k:28, b:100, f:30 , RAM cost: 1.8747 GB  k:35, b:100, f:30 , RAM cost: 1.8762 GB  k:42, b:100, f:30 , RAM cost: 1.8765 GB  k:49, b:100, f:30 , RAM cost: 1.8773 GB  k:56, b:100, f:30 , RAM cost: 1.8791 GB  k:63, b:100, f:30 , RAM cost: 1.8792 GB  k:70, b:100, f:30 , RAM cost: 1.8790 GB  k:77, b:100, f:30 , RAM cost: 1.8796 GB  k:84, b:100, f:30 , RAM cost: 1.8792 GB  k:91, b:100, f:30 , RAM cost: 1.8810 GB  k:98, b:100, f:30 , RAM cost: 1.8811 GB  k:105, b:93, f:23 , RAM cost: 1.8809 GB  k:112, b:86, f:16 , RAM cost: 1.8816 GB  k:119, b:79, f:9 , RAM cost: 1.8821 GB  k:126, b:72, f:2 , RAM cost: 1.8820 GB  k:128, b:70, f:0  , RAM cost: 1.8821 GB   k:128, b:70, f:0 

slope: -0.04818,||b_1|| = 8508889, target_norm = 251438, BKZ cost: 204.903 s, walltime: 413.732 sec, memory cost = 1.88 GB 
Without otf, would expect solution at pump_{65, 133, 12},n_max = 143

Starting svp pump_{65, 133, 12}
 121: ↑ 50   , RAM cost:1.8619 GB     121: ↑ 51   , RAM cost:1.8619 GB     121: ↑ 51   , RAM cost:1.8619 GB     121: ↑ 52   , RAM cost:1.8619 GB     121: ↑ 52   , RAM cost:1.8619 GB     121: ↑ 53   , RAM cost:1.8619 GB     121: ↑ 53   , RAM cost:1.8619 GB     121: ↑ 54   , RAM cost:1.8619 GB     121: ↑ 54   , RAM cost:1.8619 GB     121: ↑ 55   , RAM cost:1.8619 GB     121: ↑ 55   , RAM cost:1.8619 GB     121: ↑ 56   , RAM cost:1.8619 GB     121: ↑ 56   , RAM cost:1.8619 GB     121: ↑ 57   , RAM cost:1.8619 GB     121: ↑ 57   , RAM cost:1.8625 GB     121: ↑ 58   , RAM cost:1.8625 GB     121: ↑ 58   , RAM cost:1.8630 GB     121: ↑ 59   , RAM cost:1.8630 GB     121: ↑ 59   , RAM cost:1.8638 GB     121: ↑ 60   , RAM cost:1.8638 GB     121: ↑ 60   , RAM cost:1.8647 GB     121: ↑ 61   , RAM cost:1.8647 GB     121: ↑ 61   , RAM cost:1.8657 GB     121: ↑ 62   , RAM cost:1.8657 GB     121: ↑ 62   , RAM cost:1.8667 GB     121: ↑ 63   , RAM cost:1.8667 GB     121: ↑ 63   , RAM cost:1.8683 GB     121: ↑ 64   , RAM cost:1.8683 GB     121: ↑ 64   , RAM cost:1.8698 GB     121: ↑ 65   , RAM cost:1.9948 GB     121: ↑ 65   , RAM cost:1.9966 GB     121: ↑ 66   , RAM cost:1.9966 GB     121: ↑ 66   , RAM cost:1.9986 GB     121: ↑ 67   , RAM cost:1.9986 GB     121: ↑ 67   , RAM cost:2.0009 GB     121: ↑ 68   , RAM cost:2.0009 GB     121: ↑ 68   , RAM cost:2.0036 GB     121: ↑ 69   , RAM cost:2.0036 GB     121: ↑ 69   , RAM cost:2.0066 GB     121: ↑ 70   , RAM cost:2.0066 GB     121: ↑ 70   , RAM cost:2.0103 GB     121: ↑ 71   , RAM cost:2.0103 GB     121: ↑ 71   , RAM cost:2.0144 GB     121: ↑ 72   , RAM cost:2.0144 GB     121: ↑ 72   , RAM cost:2.0194 GB     121: ↑ 73   , RAM cost:2.0194 GB     121: ↑ 73   , RAM cost:2.0249 GB     121: ↑ 74   , RAM cost:2.0249 GB     121: ↑ 74   , RAM cost:2.0312 GB     121: ↑ 75   , RAM cost:2.0312 GB     121: ↑ 75   , RAM cost:2.0388 GB     121: ↑ 76   , RAM cost:2.0388 GB     121: ↑ 76   , RAM cost:2.0474 GB     121: ↑ 77   , RAM cost:2.0474 GB     121: ↑ 77   , RAM cost:2.0572 GB     121: ↑ 78   , RAM cost:2.0572 GB     121: ↑ 78   , RAM cost:2.0688 GB     121: ↑ 79   , RAM cost:2.0688 GB     121: ↑ 79   , RAM cost:2.0822 GB     121: ↑ 80   , RAM cost:2.0822 GB     121: ↑ 80   , RAM cost:2.0981 GB     121: ↑ 81   , RAM cost:2.0981 GB     121: ↑ 81   , RAM cost:2.1157 GB     121: ↑ 82   , RAM cost:2.1157 GB     121: ↑ 82   , RAM cost:2.1365 GB     121: ↑ 83   , RAM cost:2.1365 GB     121: ↑ 83   , RAM cost:2.1598 GB     121: ↑ 84   , RAM cost:2.1598 GB     121: ↑ 84   , RAM cost:2.2063 GB     121: ↑ 85   , RAM cost:2.2063 GB     121: ↑ 85   , RAM cost:2.2419 GB     121: ↑ 86   , RAM cost:2.2419 GB     121: ↑ 86   , RAM cost:2.2800 GB     121: ↑ 87   , RAM cost:2.2800 GB     121: ↑ 87   , RAM cost:2.3242 GB     121: ↑ 88   , RAM cost:2.3244 GB     121: ↑ 88   , RAM cost:2.3737 GB     121: ↑ 89   , RAM cost:2.3737 GB     121: ↑ 89   , RAM cost:2.4346 GB     121: ↑ 90   , RAM cost:2.4346 GB     121: ↑ 90   , RAM cost:2.5089 GB     121: ↑ 91   , RAM cost:2.5089 GB     121: ↑ 91   , RAM cost:2.5839 GB     121: ↑ 92   , RAM cost:2.5839 GB     121: ↑ 92   , RAM cost:2.6774 GB     121: ↑ 93   , RAM cost:2.6774 GB     121: ↑ 93   , RAM cost:2.7836 GB     121: ↑ 94   , RAM cost:2.7836 GB     121: ↑ 94   , RAM cost:2.9048 GB     121: ↑ 95   , RAM cost:2.9048 GB     121: ↑ 95   , RAM cost:3.0423 GB     121: ↑ 96   , RAM cost:3.0430 GB     121: ↑ 96   , RAM cost:3.2041 GB     121: ↑ 97   , RAM cost:3.3290 GB     121: ↑ 97   , RAM cost:3.5266 GB     121: ↑ 98   , RAM cost:3.5266 GB     121: ↑ 98   , RAM cost:3.7580 GB     121: ↑ 99   , RAM cost:3.7580 GB     121: ↑ 99   , RAM cost:4.0018 GB     121: ↑100   , RAM cost:4.0036 GB     121: ↑100   , RAM cost:4.2802 GB     121: ↑101   , RAM cost:4.2802 GB     121: ↑101   , RAM cost:4.6275 GB     121: ↑102   , RAM cost:4.6275 GB     121: ↑102   , RAM cost:5.0398 GB     121: ↑103   , RAM cost:5.0398 GB     121: ↑103   , RAM cost:5.5083 GB     121: ↑104   , RAM cost:5.5083 GB     121: ↑104   , RAM cost:6.0097 GB     121: ↑105   , RAM cost:6.0097 GB     121: ↑105   , RAM cost:6.5753 GB     121: ↑106   , RAM cost:6.5753 GB     121: ↑106   , RAM cost:7.3298 GB    Solution: (24, 27, -3, 41, -33, 33, -48, 22, 3, 6, -18, 16, 32, -10, 55, -6, -6, -17, -49, -1, -74, 23, 8, -1, -23, -36, 41, -7, -33, 27, 18, 11, 0, -26, 9, 53, 36, 30, -42, 6, -24, -15, 53, -31, -14, 0, 0, 16, -5, 4, 56, -31, -8, -38, -4, -14, -27, 13, -16, 57, -51, -13, 17, -28, 3, 57, 46, -42, -20, -33, -10, 2, 4, -45, -44, 9, 21, -17, 14, 8, 46, 48, 31, -2, -24, 35, -9, -18, -12, 59, 50, -21, -80, -18, -55, -4, -33, 21, 9, 15, 30, -25, 40, -2, 24, 14, 9, 23, 29, -17, -37, -23, 5, 27, -87, 16, 40, -17, -48, -3, -21, 24, -34, 9, -10, 29, -2, 0, 61, 4, -52, 13, -55, 45, -9, -9, 21, -61, 11, -12, 51, -21, 33, -8, 41, -7, -16, 2, 20, -12, -26, -3, 24, 3, -20, -26, 14, 0, 3, 1, -7, 17, -43, -39, -23, 7, 17, -27, -10, 42, 30, -16, -3, 22, 17, 28, 29, 23, -12, -36, -14, 5, -26, 13, 16, -72, -5, 3, -10, -15, -5, 10, 63, -32, -8, -45, 26, -1)
slope: -0.04830, T_pump = 163.038 sec, RAM_pump = 7.330 GB, walltime: 576.773 sec
Finished! TT=576.86 sec
(24, 27, -3, 41, -33, 33, -48, 22, 3, 6, -18, 16, 32, -10, 55, -6, -6, -17, -49, -1, -74, 23, 8, -1, -23, -36, 41, -7, -33, 27, 18, 11, 0, -26, 9, 53, 36, 30, -42, 6, -24, -15, 53, -31, -14, 0, 0, 16, -5, 4, 56, -31, -8, -38, -4, -14, -27, 13, -16, 57, -51, -13, 17, -28, 3, 57, 46, -42, -20, -33, -10, 2, 4, -45, -44, 9, 21, -17, 14, 8, 46, 48, 31, -2, -24, 35, -9, -18, -12, 59, 50, -21, -80, -18, -55, -4, -33, 21, 9, 15, 30, -25, 40, -2, 24, 14, 9, 23, 29, -17, -37, -23, 5, 27, -87, 16, 40, -17, -48, -3, -21, 24, -34, 9, -10, 29, -2, 0, 61, 4, -52, 13, -55, 45, -9, -9, 21, -61, 11, -12, 51, -21, 33, -8, 41, -7, -16, 2, 20, -12, -26, -3, 24, 3, -20, -26, 14, 0, 3, 1, -7, 17, -43, -39, -23, 7, 17, -27, -10, 42, 30, -16, -3, 22, 17, 28, 29, 23, -12, -36, -14, 5, -26, 13, 16, -72, -5, 3, -10, -15, -5, 10, 63, -32, -8, -45, 26, -1)
